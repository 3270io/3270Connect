{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"3270.io","text":"<p>Documentation and knowledge for 3270.io applications.</p>"},{"location":"1.go3270/","title":"go3270 Command-Line Utility","text":"<p>The <code>go3270</code> command-line utility allows you to automate interactions with a 3270 terminal emulator session. It provides a set of commands and features for scripting and automating mainframe tasks. Below are various usage examples and modes for <code>go3270</code>.</p>"},{"location":"1.go3270/#installation","title":"Installation","text":"<p>Before using <code>go3270</code>, make sure you have it installed. You can download and install it using the following command:</p> <pre><code>go get -u gitlab.jnnn.gs/jnnngs/go3270\n</code></pre>"},{"location":"1.go3270/#usage-examples","title":"Usage Examples","text":""},{"location":"1.go3270/#basic-commands","title":"Basic Commands","text":""},{"location":"1.go3270/#workflows","title":"Workflows","text":"<p>Define complex workflows using JSON configuration files. Here's an example <code>workflow.json</code> file:</p> <pre><code>{\n  \"Host\": \"10.27.27.62\",\n  \"Port\": 30050,\n  \"HTMLFilePath\": \"output.html\",\n  \"Steps\": [\n    {\n      \"Type\": \"InitializeHTMLFile\"\n    },\n    {\n      \"Type\": \"Connect\"\n    },\n    {\n      \"Type\": \"AsciiScreenGrab\"\n    },\n    {\n      \"Type\": \"FillString\",\n      \"Coordinates\": {\"Row\": 10, \"Column\": 44},\n      \"Text\": \"b0001\"\n    },\n    {\n      \"Type\": \"AsciiScreenGrab\"\n    },\n    {\n      \"Type\": \"PressEnter\"\n    },\n    {\n      \"Type\": \"AsciiScreenGrab\"\n    },\n    {\n      \"Type\": \"Disconnect\"\n    }\n  ]\n}\n</code></pre> <p>Execute the workflow defined in <code>workflow.json</code>:</p> <pre><code>go3270 -config workflow.json \n</code></pre>"},{"location":"1.go3270/#api-mode","title":"API Mode","text":"<p>Run <code>go3270</code> in API mode to interact with terminal sessions via HTTP POST requests. Start the API on port 8080:</p> <pre><code>go3270 -api -api-port 8080\n</code></pre> <p>Use tools like Postman to send POST requests with JSON payloads to <code>http://localhost:8080</code> for terminal actions.</p>"},{"location":"1.go3270/#concurrent-mode","title":"Concurrent Mode","text":"<p>Execute multiple commands concurrently with <code>go3270</code>. Specify the number of concurrent workflows:</p> <pre><code>go3270 -concurrent &lt;num&gt; \n</code></pre> <ul> <li>Replace <code>&lt;num&gt;</code> with the desired number of concurrent workflows.</li> </ul>"},{"location":"1.go3270/#additional-options","title":"Additional Options","text":"<ul> <li><code>-verbose</code>: Run <code>go3270</code> in verbose mode for detailed output.</li> <li><code>-help</code>: Show usage information.</li> </ul>"},{"location":"1.go3270/#contributing","title":"Contributing","text":"<p>If you find any issues or have suggestions for improvements, please feel free to open an issue or submit a pull request.</p>"},{"location":"1.go3270/#license","title":"License","text":"<p>This project is licensed under the MIT License - see the LICENSE file for details.</p> <p>--- Appendix</p> <p>-- directly running x3270 in script mode x3270 -script &lt; test.script</p> <p>-- recreate bindata cd ~/chatGPT/go3270/binaries/ cp /usr/bin/x3270 . cp /usr/bin/x3270if . cp /usr/bin/s3270 . go-bindata -o bindata.go -pkg binaries -prefix \"binaries/\" .</p>"},{"location":"1.mkdocs/","title":"mkdocs build","text":""},{"location":"1.mkdocs/#1-cmd-to-run","title":"1. CMD to run","text":"<ul> <li>in the project root folder</li> <li><code>mkdocs build -d app/static</code> build the static site within app/static folder</li> </ul>"}]}