{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Welcome to the official documentation for the 3270Connect command-line utility. This documentation provides comprehensive information on how to use 3270Connect for automating interactions with terminal emulators like x3270 or s3270.</p>"},{"location":"#features","title":"Features","text":"<p>Here are the key features of 3270Connect:</p> <ul> <li>Running workflows defined in a configuration file.</li> <li>Capturing the 3270 screens as the workflow executes.</li> <li>Running workflows concurrently with options for controlling the number of concurrent workflows and runtime duration.</li> <li>Headless mode for running workflows without a graphical user interface.</li> <li>Verbose mode for detailed output.</li> <li>API mode for advanced automation.</li> <li>Running a 3270 sample application to assist with testing workflow features.</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>If you're new to 3270Connect, you can start by exploring the following sections:</p> <ul> <li>Installation: Learn how to install 3270Connect on your system.</li> <li>Basic Usage: Get started with basic usage, running workflows and sample 3270 application(s) to aid testing.</li> </ul>"},{"location":"#advanced-features","title":"Advanced Features","text":"<p>Once you've mastered the basics, you can dive into more advanced features:</p> <ul> <li>API Mode: Discover how to run 3270Connect as an API server for advanced automation and load performance testing.</li> </ul>"},{"location":"#known-issues-and-short-term-planned-changes","title":"Known issues and short term planned changes","text":"<ol> <li> <p>When running under concurrent mode with runtime and the volumes are high, the tactical logic to <code>sleep and retry</code> on issue no longer works. This is planed to be replaced with wait_for_field logic. Done</p> </li> <li> <p>When running under concurrent mode with no runtime, the ramp logic is not in place. Fixed</p> </li> <li> <p>When running in API mode, make headless the default option. Done</p> </li> <li> <p>Remake the videos in higher resolution. Done</p> </li> <li> <p>When running in API mode, provide a new option to return the HTML screen grab contents. Done</p> </li> <li> <p>App additional dynamic sample 3270 applications. Done</p> </li> </ol>"},{"location":"#conclusion","title":"Conclusion","text":"<p>The 3270Connect command-line utility is a powerful tool for automating terminal emulator interactions. This documentation is here to help you make the most of it. If you have any questions or need assistance, feel free to reach out to the community or refer to the GitHub repository for more details.</p> <p>Let's get started with 3270Connect!</p>"},{"location":"#video-example","title":"Video example","text":""},{"location":"#3270connect-basic-usage","title":"3270Connect Basic Usage","text":""},{"location":"#3270connect-api-usage","title":"3270Connect API Usage","text":""},{"location":"advanced-features/","title":"Advanced Features","text":""},{"location":"advanced-features/#advanced-features","title":"Advanced Features","text":""},{"location":"advanced-features/#api-mode","title":"API Mode","text":"<p><code>3270Connect</code> can also run as an API server using the <code>-api</code> and <code>-api-port</code> flags:</p> <ul> <li><code>-api</code>: Run <code>3270Connect</code> as an API.</li> <li><code>-api-port</code>: Specifies the port for the API (default is 8080).</li> </ul> <p>To run <code>3270Connect</code> in API mode, use the following command:</p> <pre><code>3270Connect -api -api-port 8080\n</code></pre> <p>Once the API is running, you can send HTTP requests to it to trigger workflows and retrieve information.</p> <p>POST:</p> <pre><code>http://localhost:8080/api/execute\n</code></pre> <p>Body: </p><pre><code>{\n  \"Host\": \"10.27.27.27\",\n  \"Port\": 3270,\n  \"HTMLFilePath\": \"output.html\",\n  \"Steps\": [\n    {\n      \"Type\": \"InitializeHTMLFile\"\n    },\n    {\n      \"Type\": \"Connect\"\n    },\n    {\n      \"Type\": \"AsciiScreenGrab\"\n    },\n    {\n      \"Type\": \"CheckValue\",\n      \"Coordinates\": {\"Row\": 1, \"Column\": 2, \"Length\": 11},\n      \"Text\": \"Some: VALUE\"\n    },\n    {\n      \"Type\": \"FillString\",\n      \"Coordinates\": {\"Row\": 10, \"Column\": 44},\n      \"Text\": \"user1\"\n    },\n    {\n      \"Type\": \"FillString\",\n      \"Coordinates\": {\"Row\": 11, \"Column\": 44},\n      \"Text\": \"mypass\"\n    },\n    {\n      \"Type\": \"AsciiScreenGrab\"\n    },\n    {\n      \"Type\": \"PressEnter\"\n    },\n    {\n      \"Type\": \"AsciiScreenGrab\"\n    },\n    {\n      \"Type\": \"Disconnect\"\n    }\n  ]\n}\n</code></pre>"},{"location":"advanced-features/#3270connect-api-usage","title":"3270Connect API Usage","text":""},{"location":"basic-usage/","title":"Basic Usage","text":""},{"location":"basic-usage/#basic-usage","title":"Basic Usage","text":""},{"location":"basic-usage/#introduction","title":"Introduction","text":"<p>The basic usage of <code>3270Connect</code> involves running workflows defined in a configuration file. The configuration file specifies a sequence of actions to perform, such as connecting to a host, filling fields, and capturing screens. </p> <p>To run a workflow, use the following command:</p> <pre><code>3270Connect -config workflow.json\n</code></pre> <ul> <li><code>-config</code>: Specifies the path to the configuration file (default is \"workflow.json\").</li> </ul>"},{"location":"basic-usage/#running-workflows","title":"Running Workflows","text":""},{"location":"basic-usage/#single-workflow","title":"Single Workflow","text":"<p>To run a single workflow, create a JSON configuration file that describes the workflow steps. Here's an example configuration file:</p> <pre><code>{\n  \"Host\": \"10.27.27.62\",\n  \"Port\": 3270,\n  \"HTMLFilePath\": \"output.html\",\n  \"Steps\": [\n    {\n      \"Type\": \"InitializeHTMLFile\"\n    },\n    {\n      \"Type\": \"Connect\"\n    },\n    {\n      \"Type\": \"AsciiScreenGrab\"\n    },\n    {\n      \"Type\": \"CheckValue\",\n      \"Coordinates\": {\"Row\": 1, \"Column\": 29, \"Length\": 24},\n      \"Text\": \"3270 Example Application\"\n    },\n    {\n      \"Type\": \"FillString\",\n      \"Coordinates\": {\"Row\": 5, \"Column\": 21},\n      \"Text\": \"user1-firstname\"\n    },\n    {\n      \"Type\": \"FillString\",\n      \"Coordinates\": {\"Row\": 6, \"Column\": 21},\n      \"Text\": \"user1-lastname\"\n    },\n    {\n      \"Type\": \"AsciiScreenGrab\"\n    },\n    {\n      \"Type\": \"PressEnter\"\n    },\n    {\n      \"Type\": \"CheckValue\",\n      \"Coordinates\": {\"Row\": 1, \"Column\": 29, \"Length\": 24},\n      \"Text\": \"3270 Example Application\"\n    },\n    {\n      \"Type\": \"AsciiScreenGrab\"\n    },\n    {\n      \"Type\": \"Disconnect\"\n    }\n  ]\n}\n</code></pre> <p>In this example, the workflow connects to a host, captures the screen, fills a field, presses Enter, captures the screen again, and then disconnects.</p>"},{"location":"basic-usage/#concurrent-workflows","title":"Concurrent Workflows","text":"<p>You can run multiple workflows concurrently by specifying the <code>-concurrent</code> and <code>-runtime</code> flags:</p> <ul> <li><code>-concurrent</code>: Sets the number of concurrent workflows to run (default is 1).</li> <li><code>-runtime</code>: Specifies the duration to run workflows in seconds (only used in concurrent mode).</li> </ul> <p>For example, to run two workflows concurrently for 60 seconds, use:</p> <pre><code>3270Connect -config workflow.json -concurrent 2 -runtime 60\n</code></pre>"},{"location":"basic-usage/#configuration","title":"Configuration","text":""},{"location":"basic-usage/#headless-mode","title":"Headless Mode","text":"<p>You can run <code>3270Connect</code> in headless mode using the <code>-headless</code> flag. Headless mode is useful for running workflows without a graphical user interface.</p> <pre><code>3270Connect -config workflow.json -headless\n</code></pre>"},{"location":"basic-usage/#verbose-mode","title":"Verbose Mode","text":"<p>To enable verbose mode for detailed output, use the <code>-verbose</code> flag.</p> <pre><code>3270Connect -config workflow.json -verbose\n</code></pre>"},{"location":"basic-usage/#examples","title":"Examples","text":"<p>Let's explore some common use cases with examples:</p>"},{"location":"basic-usage/#1-running-a-basic-workflow","title":"1. Running a Basic Workflow","text":"<p>Run a basic workflow defined in \"workflow.json\":</p> <pre><code>3270Connect -config workflow.json\n</code></pre>"},{"location":"basic-usage/#2-running-multiple-workflows-concurrently","title":"2. Running Multiple Workflows Concurrently","text":"<p>Run two workflows concurrently for 60 seconds:</p> <pre><code>3270Connect -config workflow.json -concurrent 2 -runtime 60\n</code></pre>"},{"location":"basic-usage/#3-running-in-headless-mode","title":"3. Running in Headless Mode","text":"<p>Run a workflow in headless mode:</p> <pre><code>3270Connect -config workflow.json -headless\n</code></pre>"},{"location":"basic-usage/#4-using-the-api-mode","title":"4. Using the API Mode","text":"<p>Run <code>3270Connect</code> in API mode and interact with it using HTTP requests.</p> <ul> <li>API Mode: Discover how to run 3270Connect as an API server for advanced automation.</li> </ul>"},{"location":"basic-usage/#5-running-a-3270-sample-application-to-help-with-testing-the-workflow-features","title":"5. Running a 3270 sample application to help with testing the workflow features","text":"<p>As well as performing workflows on a 3270 running instance, 3270Connect can emulate a 3270 sample application using the github.com/racingmars/go3270 framework. Full credit go to <code>racingmars</code> for this great open source repo. </p> <p>Note</p> <p><code>github.com/racingmars/go3270</code> is Copyright (c) 2020 Matthew R. Wilson, under MIT License.</p> <p>Run a test 3270 sample application to assist with testing 3270Connect workflow features:</p> Available Apps <p>[1] Example 1 application from https://github.com/racingmars/go3270 [2] Dynamic RSS Reader</p> <p></p><pre><code>3270Connect -runApp\n</code></pre> or <pre><code>3270Connect -runApp [number]\n</code></pre> <p>Once running and listening on port 3270, run a separate 3270 Connect to run a workflow against the sample 3270 application. The \"workflow.json\" provided with the root folder of the repo works with the sample application.</p>"},{"location":"basic-usage/#3270connect-basic-usage","title":"3270Connect Basic Usage","text":""},{"location":"basic-usage/#conclusion","title":"Conclusion","text":"<p>The <code>3270Connect</code> command-line utility offers a flexible way to automate interactions with terminal emulators. Whether you need to connect to hosts, manipulate screens, or run multiple workflows concurrently, <code>3270Connect</code> has you covered. Explore its features, experiment with different workflows, and streamline your terminal automation tasks.</p> <p>That's it! You're now ready to use <code>3270Connect</code> for your terminal automation needs, including the API mode for more advanced automation scenarios.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#installation","title":"Installation","text":"<p>To use the 3270Connect command-line utility, you need to install it on your system. Follow the steps below based on your platform:</p>"},{"location":"installation/#linux","title":"Linux","text":"<pre><code>curl -LO https://github.com/3270io/3270Connect/releases/download/v1.0.4/3270Connect\nchmod +x 3270Connect\nsudo mv 3270Connect /usr/local/bin/3270Connect\n</code></pre>"},{"location":"installation/#macos","title":"macOS","text":"<p>Coming soon.</p>"},{"location":"installation/#windows","title":"Windows","text":"<p>Coming soon.</p>"}]}